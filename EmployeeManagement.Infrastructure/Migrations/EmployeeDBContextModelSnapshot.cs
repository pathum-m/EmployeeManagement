// <auto-generated />
using System;
using EmployeeManagement.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EmployeeManagement.Infrastructure.Migrations
{
    [DbContext(typeof(EmployeeDBContext))]
    partial class EmployeeDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EmployeeManagement.Domain.Entities.Cafe", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("description");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("location");

                    b.Property<string>("Logo")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnName("logo");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_cafe");

                    b.ToTable("cafe", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("517f64d9-09b3-4632-8af1-0ee4c7b21ccb"),
                            Description = "Test edscription ABC",
                            Location = "Colombo",
                            Name = "Cafe ABC"
                        },
                        new
                        {
                            Id = new Guid("24dad7de-c26f-4d2c-81d3-22422e088c65"),
                            Description = "Test edscription DEF",
                            Location = "Galle",
                            Name = "Cafe DEF"
                        });
                });

            modelBuilder.Entity("EmployeeManagement.Domain.Entities.Employee", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<Guid?>("CafeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("cafe_id");

                    b.Property<Guid?>("CurrentCafe")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("cafe_id");

                    b.Property<int>("Gender")
                        .HasColumnType("int")
                        .HasColumnName("gender");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("name");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("Date")
                        .HasColumnName("start_date");

                    b.HasKey("Id")
                        .HasName("pk_employee");

                    b.HasIndex("CafeId")
                        .HasDatabaseName("ix_employee_cafe_id");

                    b.HasIndex("CurrentCafe")
                        .HasDatabaseName("ix_employee_current_cafe");

                    b.ToTable("employee", null, t =>
                        {
                            t.Property("CafeId")
                                .HasColumnName("cafe_id1");
                        });

                    b.HasData(
                        new
                        {
                            Id = "UI1FF17YL",
                            Gender = 0,
                            Name = "Employee_1"
                        },
                        new
                        {
                            Id = "UITN4VM3N",
                            Gender = 1,
                            Name = "Employee_2"
                        });
                });

            modelBuilder.Entity("EmployeeManagement.Domain.Entities.Employee", b =>
                {
                    b.HasOne("EmployeeManagement.Domain.Entities.Cafe", null)
                        .WithMany("Employees")
                        .HasForeignKey("CafeId")
                        .HasConstraintName("fk_employee_cafe_cafe_id");

                    b.HasOne("EmployeeManagement.Domain.Entities.Cafe", null)
                        .WithMany()
                        .HasForeignKey("CurrentCafe")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_Employee_Cafe");

                    b.OwnsOne("EmployeeManagement.Domain.ValueObjects.Email", "EmailAddress", b1 =>
                        {
                            b1.Property<string>("EmployeeId")
                                .HasColumnType("nvarchar(450)")
                                .HasColumnName("id");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("email");

                            b1.HasKey("EmployeeId");

                            b1.HasIndex("Value")
                                .IsUnique()
                                .HasDatabaseName("ix_employee_email");

                            b1.ToTable("employee");

                            b1.WithOwner()
                                .HasForeignKey("EmployeeId")
                                .HasConstraintName("fk_employee_employee_id");

                            b1.HasData(
                                new
                                {
                                    EmployeeId = "UI1FF17YL",
                                    Value = "abc@mail.com"
                                },
                                new
                                {
                                    EmployeeId = "UITN4VM3N",
                                    Value = "edf@mail.com"
                                });
                        });

                    b.OwnsOne("EmployeeManagement.Domain.ValueObjects.PhoneNumber", "PhoneNumber", b1 =>
                        {
                            b1.Property<string>("EmployeeId")
                                .HasColumnType("nvarchar(450)")
                                .HasColumnName("id");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(8)
                                .HasColumnType("nvarchar(8)")
                                .HasColumnName("phone_number");

                            b1.HasKey("EmployeeId");

                            b1.HasIndex("Value")
                                .IsUnique()
                                .HasDatabaseName("ix_employee_phone_number");

                            b1.ToTable("employee");

                            b1.WithOwner()
                                .HasForeignKey("EmployeeId")
                                .HasConstraintName("fk_employee_employee_id");

                            b1.HasData(
                                new
                                {
                                    EmployeeId = "UI1FF17YL",
                                    Value = "97654321"
                                },
                                new
                                {
                                    EmployeeId = "UITN4VM3N",
                                    Value = "87654321"
                                });
                        });

                    b.Navigation("EmailAddress")
                        .IsRequired();

                    b.Navigation("PhoneNumber")
                        .IsRequired();
                });

            modelBuilder.Entity("EmployeeManagement.Domain.Entities.Cafe", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
